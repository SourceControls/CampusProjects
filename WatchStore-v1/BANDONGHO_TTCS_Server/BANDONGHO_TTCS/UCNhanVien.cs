using DevExpress.XtraEditors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace BANDONGHO_TTCS
{
    public partial class UCNhanVien : DevExpress.XtraEditors.XtraUserControl
    {
        private bool addingNew = false;

        private static UCNhanVien _instance;
        public static UCNhanVien Instance
        {
            get
            {
                if (_instance == null)
                {
                    _instance = new UCNhanVien();
                }
                return _instance;
            }
        }
        public UCNhanVien()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            nHANVIENTableAdapter.Fill(dSet.NHANVIEN);
        }

        private void startEdit(bool addNew)
        {
            btnSua.Enabled = btnXoa.Enabled =
            btnLoad.Enabled = nHANVIENGridControl.Enabled =
            btnThem.Enabled = false;
            panelInput.Enabled = btnUndo.Enabled = btnLuu.Enabled = true;
            if (addNew)
            {
                bdsNhanVien.AddNew();
                addingNew = true;
                gioiTinhGroup.SelectedIndex = 0;
                txtMaNV.Enabled = true;
                btnCapHoacThuHoiQuyenQuanLy.Enabled = btnCapTaiKhoan.Enabled = btnKhoaHoacMoKhoaTaiKhoan.Enabled = false;
            }
            else
            {
                addingNew = false;
                txtMaNV.Enabled = false;
            }
        }
        private void doneEdit()
        {
            btnSua.Enabled = btnXoa.Enabled =
            btnLoad.Enabled = nHANVIENGridControl.Enabled =
            btnThem.Enabled = true;
            panelInput.Enabled = btnUndo.Enabled = btnLuu.Enabled = false;
            if (addingNew)
            {
                addingNew = false;
                btnCapHoacThuHoiQuyenQuanLy.Enabled = btnCapTaiKhoan.Enabled = btnKhoaHoacMoKhoaTaiKhoan.Enabled = true;
            }
        }

        private void giaDuLieu()
        {
            txtMaNV.Text = "TESTNV";
            txtHo.Text = "Nguyễn Văn";
            txtTen.Text = "A";
            txtEmail.Text = "test@gmai.com";
            txtSDT.Text = "0973343541";
            txtDiaChi.Text = "Tp.HCM";
            txtNgaySinh.Text = "01/01/2001";

        }
        private void btnThem_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            startEdit(true);
            giaDuLieu();

        }

        private void panel1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void btnLuu_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            //check ràng buộc nhập liệu
            string maNV = txtMaNV.Text.ToString().Trim();
            string ho = txtHo.Text.ToString().Trim();
            string ten = txtTen.Text.ToString().Trim();
            string sdt = txtSDT.Text.ToString().Trim();
            string diaChi = txtDiaChi.Text.ToString().Trim();
            string email = txtEmail.Text.ToString().Trim();

            if (maNV.Length == 0 || ho.Length == 0 || ten.Length == 0|| sdt.Length == 0 || diaChi.Length == 0 || email.Length == 0)
            {
                MessageBox.Show("Không được để trống bất kì thông tin nào!");
                return;
            }

            if(bdsNhanVien.Find("MANV", maNV) != -1 & bdsNhanVien.Find("MANV", maNV) != bdsNhanVien.Position)
            {
                MessageBox.Show("Mã nhân viên không được trùng!");
                return;
            }
            if (!IsValidEmail(email))
            {
                MessageBox.Show("Email không đúng định dạng!");
                return;
            }
            //bắt đầu lưu
            try
            {
                bdsNhanVien.EndEdit();
                nHANVIENTableAdapter.Update(dSet.NHANVIEN);
                bdsNhanVien.ResetCurrentItem();
                MessageBox.Show("Lưu thành công!");

            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message);
            }
            finally
            {
                doneEdit();   
            }
        }

        private void btnSua_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if(bdsNhanVien.Count == 0)
            {
                MessageBox.Show("Không có dữ liệu để sửa!");
                return;
            }
            startEdit(false);
        }

        private void btnUndo_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            bdsNhanVien.CancelEdit();

            doneEdit();
        }
        bool IsValidEmail(string email)
        {
            var trimmedEmail = email.Trim();

            if (trimmedEmail.EndsWith("."))
            {
                return false; // suggested by @TK-421
            }
            try
            {
                var addr = new System.Net.Mail.MailAddress(email);
                return addr.Address == trimmedEmail;
            }
            catch
            {
                return false;
            }
        }

        private void btnCapTaiKhoan_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (bdsNhanVien.Count == 0)
            {
                MessageBox.Show("Không có nhân viên!");
                return;
            }

            String cmd = "EXEC SP_CAP_TAI_KHOAN '" + txtMaNV.Text.Trim() +"'";
            if(Program.execSqlNonQuery(cmd))
                MessageBox.Show("Cấp tài khoản thành công!\nTên Đăng Nhập = Mật Khẩu = " + txtMaNV.Text.Trim());
        }

        private void barButtonItem1_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (bdsNhanVien.Count == 0)
            {
                MessageBox.Show("Không có nhân viên!");
                return;
            }
            String maNV = txtMaNV.Text.Trim();
            if(maNV == Program.login)
            {
                MessageBox.Show("Không thể tự khóa tài khoản");
                return;
            }
            String cmd = "EXEC SP_KHOA_HOAC_MO_KHOA_TAI_KHOAN '" + maNV + "'";
            int status = Program.execSqlNonQueryReturnStatus(cmd);
            if (status == 1)
                MessageBox.Show("Đã khóa tài khoản " + maNV + " !");
            else if (status == 2)
                MessageBox.Show("Đã mở khóa tài khoản " + maNV + " !");

        }

        private void barButtonItem2_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (bdsNhanVien.Count == 0)
            {
                MessageBox.Show("Không có nhân viên!");
                return;
            }
            String maNV = txtMaNV.Text.Trim();
            if(maNV == Program.login)
            {
                MessageBox.Show("Không thể tự thu hồi quyền quản lý!");
                return;
            }
            String cmd = "EXEC SP_CAP_HOAC_THU_HOI_QUYEN_QUAN_LY '" + maNV + "'";
            int status = Program.execSqlNonQueryReturnStatus(cmd);
            if (status == 1)
                MessageBox.Show("Đã cấp quyền quản lý cho" + maNV);
            else if (status == 2)
                MessageBox.Show("Đã thu hồi quyền quản lý của " + maNV);
        }

        private void btnLoad_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            nHANVIENTableAdapter.Fill(dSet.NHANVIEN);
        }
    }
}
